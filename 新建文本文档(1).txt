# 导入所需的库
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

# 读取数据文件，假设你的csv文件的网址是https://github.com/walker-kb/something/blob/main/credit_card.csv
url = "https://github.com/walker-kb/something/blob/main/credit_card.csv"
df = pd.read_csv("credit_card.csv", encoding="gbk")
# 查看数据概况
df.head()
df.info()
df.describe()

# 处理缺失值，这里用均值填充
df.fillna(df.mean(), inplace=True)

# 选择要分析的特征列，这里用所有列除了ID
features = df.columns.drop("信用卡顾客编号")

# 标准化数据，使每个特征的均值为0，标准差为1
scaler = StandardScaler()
X = scaler.fit_transform(df[features])

# 降维数据，使用PCA将特征维度降到2维，方便可视化
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)

# 聚类数据，使用K-Means算法，这里假设有4个聚类中心
kmeans = KMeans(n_clusters=4, random_state=0)
y_pred = kmeans.fit_predict(X)

# 可视化聚类结果，用散点图显示不同组的数据点
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y_pred)
plt.xlabel("PCA 1")
plt.ylabel("PCA 2")
plt.title("Credit Card Data Clustering")
plt.show()

# 绘制雷达图，显示不同组的特征差异
# 定义雷达图函数，参考https://matplotlib.org/stable/gallery/api/radar_chart.html
def radar_chart(data, labels, title):
    # 设置雷达图的角度和标签
    angles = np.linspace(0, 2 * np.pi, len(labels), endpoint=False)
    angles = np.concatenate((angles, [angles[0]]))
    labels = np.concatenate((labels, [labels[0]]))

    # 设置雷达图的大小和布局
    fig, ax = plt.subplots(figsize=(6, 6), subplot_kw=dict(polar=True))
    ax.set_theta_offset(np.pi / 2)
    ax.set_theta_direction(-1)
    ax.set_thetagrids(angles * 180 / np.pi, labels)
    ax.set_rlabel_position(0)

    # 绘制每个组的多边形，并用不同的颜色区分
    for i in range(data.shape[0]):
        values = data[i]
        values = np.concatenate((values, [values[0]]))
        ax.plot(angles, values, linewidth=1, linestyle='solid', label='Group ' + str(i))
        ax.fill(angles, values, alpha=0.25)

    # 设置标题和图例
    plt.title(title)
    plt.legend(loc='upper right', bbox_to_anchor=(1.3, 1.1))

# 计算每个组的特征均值，作为雷达图的数据源
group_means = df.groupby(y_pred)[features].mean()

# 调用雷达图函数，显示不同组的信用卡行为差异
radar_chart(group_means.values, features, "Credit Card Behavior by Group")
plt.show()








import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.cluster import KMeans
plt.rcParams[ 'font.sans-serif' ] = [ 'SimHei' ] 
plt.rcParams[ 'axes.unicode_minus' ] = False  
airline_data = pd.read_csv("air_data.csv",encoding="gb18030")
print("原始数据形状：",airline_data.shape)
exp1=airline_data["SUM_YR_1"].notnull()
exp2=airline_data["SUM_YR_2"].notnull()
exp=exp1&exp2
airline_notnull=airline_data.loc[exp,:]
print("删除确实记录数据形状：",airline_notnull.shape)
index1=airline_notnull["SUM_YR_1"]!=0
index2=airline_notnull["SUM_YR_2"]!=0
index3=(airline_notnull["SEG_KM_SUM"]>0)&(airline_notnull["avg_discount"]!=0)
airline=airline_notnull[(index1|index2)&index3]
print("删除异常记录数据形状：",airline.shape)
#LRFMC，选取需求特征
#客户关系长度L，消费时间间隔R，消费频率F，飞行里程M，折扣系数的平均值C
#R F M C 这4个特征可以直接提取使用，L需要另外计算
airline_selection=airline[['FFP_DATE','LOAD_TIME','FLIGHT_COUNT','LAST_TO_END','avg_discount','SEG_KM_SUM']]
#构建L特征
L=pd.to_datetime(airline_selection['LOAD_TIME'])-pd.to_datetime(airline_selection['FFP_DATE'])
L=L.astype('str').str.split().str[0]
L=L.astype('int')/30
#合并特征
airline_features=pd.concat([L,airline_selection.iloc[:,2:]],axis=1)
print("构建的LRFMC特征的前5行：\n",airline_features.head())
#标准化LRFMC模型的特征
from sklearn.preprocessing import StandardScaler
data=StandardScaler().fit_transform(airline_features)
print("标准化后LRFMC模型分5个特征为：\n",data[:5,:])
# 调用K-Means算法，进行聚类分析
airline_scale = np.load('airline_scale.npz')['arr_0']
k = 5  # 确定聚类中心数
# 构建模型，随机种子设为123
kmeans_model = KMeans(n_clusters = k,n_jobs=4,random_state=123)
fit_kmeans = kmeans_model.fit(airline_scale)  # 模型训练

# 查看聚类结果
kmeans_cc = kmeans_model.cluster_centers_  # 聚类中心
print('各类聚类中心为：\n',kmeans_cc)
kmeans_labels = kmeans_model.labels_  # 样本的类别标签
print('各样本的类别标签为：\n',kmeans_labels)
r1 = pd.Series(kmeans_model.labels_).value_counts()  # 统计不同类别样本的数目
print('最终每个类别的数目为：\n',r1)
# 输出聚类分群的结果
cluster_center = pd.DataFrame(kmeans_model.cluster_centers_,\
             columns = ['ZL','ZR','ZF','ZM','ZC'])   # 将聚类中心放在数据框中
cluster_center.index = pd.DataFrame(kmeans_model.labels_ ).\
                  drop_duplicates().iloc[:,0]  # 将样本类别作为数据框索引
print(cluster_center)
# 绘制雷达图
#标签

labels =cluster_center
#数据个数
k = 5 
plot_data = kmeans_model.cluster_centers_
#指定颜色
color = ['b', 'g', 'r', 'c', 'y'] 
angles = np.linspace(0, 2*np.pi, k, endpoint=False)
# 闭合
plot_data = np.concatenate((plot_data, plot_data[:,[0]]), axis=1) 
# 闭合
angles = np.concatenate((angles, [angles[0]])) 
fig = plt.figure()
#polar参数
ax = fig.add_subplot(111, polar=True) 
for i in range(len(plot_data)):
    # 画线
    ax.plot(angles, plot_data[i], 'o-', color = color[i], labels = 'client'+str(i), linewidth=2)
ax.set_rgrids(np.arange(0.01, 3.5, 0.5), np.arange(-1, 2.5, 0.5), fontproperties="SimHei")
ax.set_thetagrids(angles * 180/np.pi,kmeans_labels, fontproperties="SimHei")
plt.legend(loc = 4)
plt.show()